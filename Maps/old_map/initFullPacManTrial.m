function initFullPacManTrial(continueTrial)
   %% 
    globalDefinitions;
    ghostActive=0;
    startTile = [14 15 13 16; 17 18 17 19];
    if (continueTrial ==0) % start a new trial
        % initialize gameMap
        constructMap(28, 36, [ ...
            '____________________________' ...
            '____________________________' ...
            '____________________________' ...
            '||||||||||||||||||||||||||||' ...
            '|............||............|' ...
            '|.||||.|||||.||.|||||.||||.|' ...
            '|o||||.|||||.||.|||||.||||o|' ...
            '|.||||.|||||.||.|||||.||||.|' ...
            '|..........................|' ...
            '|.||||.||.||||||||.||.||||.|' ...
            '|.||||.||.||||||||.||.||||.|' ...
            '|......||....||....||......|' ...
            '||||||.||||| || |||||.||||||' ...
            '_____|.||||| || |||||.|_____' ...
            '_____|.||          ||.|_____' ...
            '_____|.|| |||--||| ||.|_____' ...
            '||||||.|| |______| ||.||||||' ...
            '      .   |______|   .      ' ...
            '||||||.|| |______| ||.||||||' ...
            '_____|.|| |||||||| ||.|_____' ...
            '_____|.||          ||.|_____' ...
            '_____|.|| |||||||| ||.|_____' ...
            '||||||.|| |||||||| ||.||||||' ...
            '|............||............|' ...
            '|.||||.|||||.||.|||||.||||.|' ...
            '|.||||.|||||.||.|||||.||||.|' ...
            '|o..||.......  .......||..o|' ...
            '|||.||.||.||||||||.||.||.|||' ...
            '|||.||.||.||||||||.||.||.|||' ...
            '|......||....||....||......|' ...
            '|.||||||||||.||.||||||||||.|' ...
            '|.||||||||||.||.||||||||||.|' ...
            '|..........................|' ...
            '||||||||||||||||||||||||||||' ...
            '____________________________' ...
            '____________________________']);
        
        
        % pacman settings
        pacMan.color = [1 1 0 0.8];
% %         pacMan.frame = 0;
        pacMan.flipPerTile = tileSize / flipInterval;
        pacMan.step = 0;
        pacMan.numSteps = 10;
        pacMan.angle = 300;
        pacMan.frames = 0;
        pacMan.eatPauseFramesLeft = 0;
        pacMan.tile = struct('x',14,'y',27);
        pacMan.pixel = struct('x',(pacMan.tile.x)*tileSize,'y',(pacMan.tile.y-1)*tileSize+midTile.y);
        pacMan.dirEnum = -1;
        pacMan.nextDirEnum = -1;
        pacMan.dir = setDirFromEnum(-1);
        pacMan.distToMid = struct('x', 0, 'y', 10);
        pacMan.tilePixel = struct('x', -1, 'y', -1);

        % ghost settings
        ghostNumber = 4;
        ghost = struct( ...
            'id', 1, ...
            'dir', struct('x',1,'y',0), ...
            'dirEnum', 0, ...
            'mode', 0, ...
            'targeting', 0, ...
            'scared', 0, ...
            'sigReverse', 0, ...
            'sigLeaveHome', 0, ...
            'faceDirEnum', 0, ...
            'pixel', struct('x',0,'y',0), ...        % pixel position
            'tile', struct('x',18,'y',17), ...       % tile position
            'tilePixel', struct('x',0,'y',0), ...    % pixel location inside tile
            'distToMid', struct('x',0,'y',0), ...    % pixel distance to mid-tile
            'targetTile', struct('x',0,'y',0), ...   % tile position used for targeting
            'frames', 0);                            % frame count
        ghosts = [ghost ghost ghost ghost];
        cornerTile = [25 2 27 0; 0 0 34 34];
        %startMode = [GHOST_LEAVING_HOME GHOST_PACING_HOME GHOST_PACING_HOME GHOST_PACING_HOME];
        %startTile = [7 7 22 22; 9 24 9 24];
        for g=1:ghostNumber
            ghosts(g).id = g;
            ghosts(g).mode = GHOST_PACING_HOME;
            %ghosts(g).arriveHomeMode = startMode(g);
            ghosts(g).color = GHOST_COLOR{g};
            ghosts(g).tile.x = 13+g;
            ghosts(g).pixel.x = (startTile(1,g)-1)*tileSize + midTile.x;
            ghosts(g).pixel.y = (startTile(2,g)-1)*tileSize + midTile.y;
            ghosts(g).startPixel = ghosts(g).pixel;
            ghosts(g).dirEnum = mod(g,2)*2;
            ghosts(g).dir = setDirFromEnum(ghosts(g).dirEnum);
            ghosts(g).faceDirEnum = ghosts(g).dirEnum;
            ghosts(g).cornerTile.x = cornerTile(1,g);
            ghosts(g).cornerTile.y = cornerTile(2,g);
        end
        
        energizerInit;
        fruitInit;
    else % continue a trial after PacMan is dead
        % pacman settings
        pacMan.tile = struct('x',14,'y',27);
        pacMan.pixel = struct('x',(pacMan.tile.x)*tileSize,'y',(pacMan.tile.y-1)*tileSize+midTile.y);
        pacMan.dirEnum = -1;
        pacMan.nextDirEnum = -1;
        pacMan.dir = setDirFromEnum(-1);
        
        % ghost settings
        for g=1:ghostNumber
            ghosts(g).id = g;
            ghosts(g).mode = GHOST_PACING_HOME;
            %ghosts(g).arriveHomeMode = startMode(g);
            ghosts(g).color = GHOST_COLOR{g};
            ghosts(g).tile.x = 13+g;
            ghosts(g).pixel.x = (startTile(1,g)-1)*tileSize + midTile.x;
            ghosts(g).pixel.y = (startTile(2,g)-1)*tileSize + midTile.y;
            ghosts(g).startPixel = ghosts(g).pixel;
            ghosts(g).dirEnum = mod(g,2)*2; % up or down
            ghosts(g).dir = setDirFromEnum(ghosts(g).dirEnum);
            ghosts(g).faceDirEnum = ghosts(g).dirEnum;
        end
        energizerInit;
        fruitInit;        
    end
    %%
end